import{_ as a,c as r,o as t,ae as o}from"./chunks/framework.CSF8Tn1V.js";const u=JSON.parse('{"title":"Function: createArrayCodec()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/createArrayCodec.md","filePath":"api/functions/createArrayCodec.md","lastUpdated":1755246450000}'),c={name:"api/functions/createArrayCodec.md"};function d(i,e,n,s,l,p){return t(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../README"><strong>vue-qs v0.1.16</strong></a></p><hr><p><a href="./../README">vue-qs</a> / createArrayCodec</p><h1 id="function-createarraycodec" tabindex="-1">Function: createArrayCodec() <a class="header-anchor" href="#function-createarraycodec" aria-label="Permalink to &quot;Function: createArrayCodec()&quot;">​</a></h1><blockquote><p><strong>createArrayCodec</strong>&lt;<code>T</code>&gt;(<code>elementCodec</code>, <code>delimiter</code>): <a href="./../type-aliases/QueryCodec"><code>QueryCodec</code></a>&lt;<code>T</code>[]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/e1f88d67026c08e56605a693106ef6b717bd39ad/src/serializers.ts#L148" target="_blank" rel="noreferrer">serializers.ts:148</a></p><p>Array codec factory for handling arrays with a specific element type</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><p>The type of array elements</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="elementcodec" tabindex="-1">elementCodec <a class="header-anchor" href="#elementcodec" aria-label="Permalink to &quot;elementCodec&quot;">​</a></h3><p><a href="./../type-aliases/QueryCodec"><code>QueryCodec</code></a>&lt;<code>T</code>&gt;</p><p>Codec for individual array elements</p><h3 id="delimiter" tabindex="-1">delimiter <a class="header-anchor" href="#delimiter" aria-label="Permalink to &quot;delimiter&quot;">​</a></h3><p><code>string</code> = <code>&#39;,&#39;</code></p><p>String to use for separating array elements (default: &#39;,&#39;)</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/QueryCodec"><code>QueryCodec</code></a>&lt;<code>T</code>[]&gt;</p><p>QueryCodec for arrays of the specified type</p>',21)]))}const m=a(c,[["render",d]]);export{u as __pageData,m as default};
