import{_ as a,c as t,o as r,ae as o}from"./chunks/framework.CSF8Tn1V.js";const m=JSON.parse('{"title":"Function: createEnumCodec()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/createEnumCodec.md","filePath":"api/functions/createEnumCodec.md","lastUpdated":1755246450000}'),c={name:"api/functions/createEnumCodec.md"};function n(d,e,s,l,i,u){return r(),t("div",null,e[0]||(e[0]=[o('<p><a href="./../README"><strong>vue-qs v0.1.16</strong></a></p><hr><p><a href="./../README">vue-qs</a> / createEnumCodec</p><h1 id="function-createenumcodec" tabindex="-1">Function: createEnumCodec() <a class="header-anchor" href="#function-createenumcodec" aria-label="Permalink to &quot;Function: createEnumCodec()&quot;">​</a></h1><blockquote><p><strong>createEnumCodec</strong>&lt;<code>T</code>&gt;(<code>allowedValues</code>): <a href="./../type-aliases/QueryCodec"><code>QueryCodec</code></a>&lt;<code>T</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/e1f88d67026c08e56605a693106ef6b717bd39ad/src/serializers.ts#L190" target="_blank" rel="noreferrer">serializers.ts:190</a></p><p>Enum codec factory for handling string enum values Falls back to first enum value for invalid inputs</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code> <em>extends</em> <code>string</code></p><p>String literal union type</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="allowedvalues" tabindex="-1">allowedValues <a class="header-anchor" href="#allowedvalues" aria-label="Permalink to &quot;allowedValues&quot;">​</a></h3><p>readonly <code>T</code>[]</p><p>Array of allowed enum values</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/QueryCodec"><code>QueryCodec</code></a>&lt;<code>T</code>&gt;</p><p>QueryCodec for the enum type</p>',18)]))}const h=a(c,[["render",n]]);export{m as __pageData,h as default};
