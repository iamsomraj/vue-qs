import{_ as a,c as o,o as t,ae as r}from"./chunks/framework.CSF8Tn1V.js";const h=JSON.parse('{"title":"Function: createJsonCodec()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/createJsonCodec.md","filePath":"api/functions/createJsonCodec.md","lastUpdated":null}'),c={name:"api/functions/createJsonCodec.md"};function n(s,e,d,i,l,p){return t(),o("div",null,e[0]||(e[0]=[r('<p><a href="./../README"><strong>vue-qs v0.1.12</strong></a></p><hr><p><a href="./../README">vue-qs</a> / createJsonCodec</p><h1 id="function-createjsoncodec" tabindex="-1">Function: createJsonCodec() <a class="header-anchor" href="#function-createjsoncodec" aria-label="Permalink to &quot;Function: createJsonCodec()&quot;">​</a></h1><blockquote><p><strong>createJsonCodec</strong>&lt;<code>T</code>&gt;(): <a href="./../type-aliases/QueryCodec"><code>QueryCodec</code></a>&lt;<code>null</code> | <code>T</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/25821b36b15a9ec7f33138992536e546f5649808/src/serializers.ts#L112" target="_blank" rel="noreferrer">serializers.ts:112</a></p><p>JSON codec factory for handling complex objects Returns null for invalid JSON</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><p>The type of object to handle</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/QueryCodec"><code>QueryCodec</code></a>&lt;<code>null</code> | <code>T</code>&gt;</p><p>QueryCodec for the specified type</p>',14)]))}const f=a(c,[["render",n]]);export{h as __pageData,f as default};
