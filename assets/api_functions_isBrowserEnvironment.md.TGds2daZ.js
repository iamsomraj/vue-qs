import{_ as s,c as n,o as i,ae as a}from"./chunks/framework.CSF8Tn1V.js";const u=JSON.parse('{"title":"Function: isBrowserEnvironment()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/isBrowserEnvironment.md","filePath":"api/functions/isBrowserEnvironment.md","lastUpdated":1755526574000}'),t={name:"api/functions/isBrowserEnvironment.md"};function r(o,e,l,p,h,c){return i(),n("div",null,e[0]||(e[0]=[a(`<p><a href="./../README"><strong>vue-qs v0.1.18</strong></a></p><hr><p><a href="./../README">vue-qs</a> / isBrowserEnvironment</p><h1 id="function-isbrowserenvironment" tabindex="-1">Function: isBrowserEnvironment() <a class="header-anchor" href="#function-isbrowserenvironment" aria-label="Permalink to &quot;Function: isBrowserEnvironment()&quot;">​</a></h1><blockquote><p><strong>isBrowserEnvironment</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/utils/core-helpers.ts#L14" target="_blank" rel="noreferrer">utils/core-helpers.ts:14</a></p><p>Safely checks if we&#39;re running in a browser environment</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code></p><p>true if running in a browser, false otherwise</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isBrowserEnvironment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Safe to use window, document, etc.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(window.location.href);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12)]))}const k=s(t,[["render",r]]);export{u as __pageData,k as default};
