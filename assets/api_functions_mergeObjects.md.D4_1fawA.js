import{_ as a,c as s,o as t,ae as i}from"./chunks/framework.CSF8Tn1V.js";const k=JSON.parse('{"title":"Function: mergeObjects()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/mergeObjects.md","filePath":"api/functions/mergeObjects.md","lastUpdated":1755526574000}'),r={name:"api/functions/mergeObjects.md"};function n(o,e,p,h,l,c){return t(),s("div",null,e[0]||(e[0]=[i(`<p><a href="./../README"><strong>vue-qs v0.1.18</strong></a></p><hr><p><a href="./../README">vue-qs</a> / mergeObjects</p><h1 id="function-mergeobjects" tabindex="-1">Function: mergeObjects() <a class="header-anchor" href="#function-mergeobjects" aria-label="Permalink to &quot;Function: mergeObjects()&quot;">​</a></h1><blockquote><p><strong>mergeObjects</strong>&lt;<code>T</code>&gt;(<code>baseObject</code>, <code>updateObject</code>): <code>T</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/utils/core-helpers.ts#L155" target="_blank" rel="noreferrer">utils/core-helpers.ts:155</a></p><p>Safely merges two objects</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="baseobject" tabindex="-1">baseObject <a class="header-anchor" href="#baseobject" aria-label="Permalink to &quot;baseObject&quot;">​</a></h3><p><code>T</code></p><p>Base object to merge into</p><h3 id="updateobject" tabindex="-1">updateObject <a class="header-anchor" href="#updateobject" aria-label="Permalink to &quot;updateObject&quot;">​</a></h3><p><code>Partial</code>&lt;<code>T</code>&gt;</p><p>Object with updates to apply</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>T</code></p><p>New merged object</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { page: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, search: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;old&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> updates</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { search: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;new&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, filter: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;active&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mergeObjects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(base, updates)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns: { page: 1, search: &#39;new&#39;, filter: &#39;active&#39; }</span></span></code></pre></div>`,22)]))}const b=a(r,[["render",n]]);export{k as __pageData,b as default};
