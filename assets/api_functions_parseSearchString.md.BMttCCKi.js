import{_ as e,c as s,o as t,ae as r}from"./chunks/framework.CSF8Tn1V.js";const g=JSON.parse('{"title":"Function: parseSearchString()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/parseSearchString.md","filePath":"api/functions/parseSearchString.md","lastUpdated":1755526574000}'),i={name:"api/functions/parseSearchString.md"};function n(h,a,p,c,o,l){return t(),s("div",null,a[0]||(a[0]=[r(`<p><a href="./../README"><strong>vue-qs v0.1.18</strong></a></p><hr><p><a href="./../README">vue-qs</a> / parseSearchString</p><h1 id="function-parsesearchstring" tabindex="-1">Function: parseSearchString() <a class="header-anchor" href="#function-parsesearchstring" aria-label="Permalink to &quot;Function: parseSearchString()&quot;">​</a></h1><blockquote><p><strong>parseSearchString</strong>(<code>searchString</code>): <code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/utils/core-helpers.ts#L56" target="_blank" rel="noreferrer">utils/core-helpers.ts:56</a></p><p>Safely converts a URL search string to a plain object</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="searchstring" tabindex="-1">searchString <a class="header-anchor" href="#searchstring" aria-label="Permalink to &quot;searchString&quot;">​</a></h3><p><code>string</code></p><p>The URL search string (with or without leading &#39;?&#39;)</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p><p>Object with key-value pairs from the search string</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseSearchString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;?page=1&amp;search=test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns: { page: &#39;1&#39;, search: &#39;test&#39; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseSearchString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;page=1&amp;search=test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns: { page: &#39;1&#39;, search: &#39;test&#39; }</span></span></code></pre></div>`,16)]))}const k=e(i,[["render",n]]);export{g as __pageData,k as default};
