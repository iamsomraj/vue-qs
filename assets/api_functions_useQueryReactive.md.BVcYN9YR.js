import{_ as a,c as t,o as r,ae as s}from"./chunks/framework.CSF8Tn1V.js";const l=JSON.parse('{"title":"Function: useQueryReactive()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/useQueryReactive.md","filePath":"api/functions/useQueryReactive.md","lastUpdated":1754980115000}'),c={name:"api/functions/useQueryReactive.md"};function o(i,e,n,u,d,h){return r(),t("div",null,e[0]||(e[0]=[s('<p><a href="./../README"><strong>vue-qs v0.1.10</strong></a></p><hr><p><a href="./../README">vue-qs</a> / useQueryReactive</p><h1 id="function-usequeryreactive" tabindex="-1">Function: useQueryReactive() <a class="header-anchor" href="#function-usequeryreactive" aria-label="Permalink to &quot;Function: useQueryReactive()&quot;">​</a></h1><blockquote><p><strong>useQueryReactive</strong>&lt;<code>TSchema</code>&gt;(<code>schema</code>, <code>options</code>): <a href="./../type-aliases/UseQueryReactiveReturn"><code>UseQueryReactiveReturn</code></a>&lt;<code>TSchema</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/f0c3b00cd958e5a3adba94ae66926daf711f0fdf/src/useQueryReactive.ts#L28" target="_blank" rel="noreferrer">useQueryReactive.ts:28</a></p><p>Manage multiple query parameters as a single reactive object. Keeps the URL in sync as any field changes; optionally syncs URL -&gt; state.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="tschema" tabindex="-1">TSchema <a class="header-anchor" href="#tschema" aria-label="Permalink to &quot;TSchema&quot;">​</a></h3><p><code>TSchema</code> <em>extends</em> <a href="./../type-aliases/ParamSchema"><code>ParamSchema</code></a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="schema" tabindex="-1">schema <a class="header-anchor" href="#schema" aria-label="Permalink to &quot;schema&quot;">​</a></h3><p><code>TSchema</code></p><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><p><a href="./../type-aliases/UseQueryReactiveOptions"><code>UseQueryReactiveOptions</code></a> = <code>{}</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/UseQueryReactiveReturn"><code>UseQueryReactiveReturn</code></a>&lt;<code>TSchema</code>&gt;</p>',17)]))}const m=a(c,[["render",o]]);export{l as __pageData,m as default};
