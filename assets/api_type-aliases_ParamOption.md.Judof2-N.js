import{_ as a,c as t,o,ae as r}from"./chunks/framework.CSF8Tn1V.js";const h=JSON.parse('{"title":"Type Alias: ParamOption<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/ParamOption.md","filePath":"api/type-aliases/ParamOption.md","lastUpdated":1754938163000}'),s={name:"api/type-aliases/ParamOption.md"};function c(i,e,l,n,d,p){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../README"><strong>vue-qs v0.1.7</strong></a></p><hr><p><a href="./../README">vue-qs</a> / ParamOption</p><h1 id="type-alias-paramoption-t" tabindex="-1">Type Alias: ParamOption&lt;T&gt; <a class="header-anchor" href="#type-alias-paramoption-t" aria-label="Permalink to &quot;Type Alias: ParamOption\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>ParamOption</strong>&lt;<code>T</code>&gt; = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/3914abe3b71638946c178175ac5cb09af4684d1b/src/types.ts#L11" target="_blank" rel="noreferrer">types.ts:11</a></p><p>Configuration for a single query parameter.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="default" tabindex="-1">default? <a class="header-anchor" href="#default" aria-label="Permalink to &quot;default?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>default</strong>: <code>T</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/3914abe3b71638946c178175ac5cb09af4684d1b/src/types.ts#L12" target="_blank" rel="noreferrer">types.ts:12</a></p><hr><h3 id="codec" tabindex="-1">codec? <a class="header-anchor" href="#codec" aria-label="Permalink to &quot;codec?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>codec</strong>: <a href="./QueryCodec"><code>QueryCodec</code></a>&lt;<code>T</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/3914abe3b71638946c178175ac5cb09af4684d1b/src/types.ts#L14" target="_blank" rel="noreferrer">types.ts:14</a></p><p>Pass a single codec instead of separate parse/serialize.</p><hr><h3 id="parse" tabindex="-1">parse? <a class="header-anchor" href="#parse" aria-label="Permalink to &quot;parse?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>parse</strong>: <a href="./Parser"><code>Parser</code></a>&lt;<code>T</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/3914abe3b71638946c178175ac5cb09af4684d1b/src/types.ts#L15" target="_blank" rel="noreferrer">types.ts:15</a></p><hr><h3 id="serialize" tabindex="-1">serialize? <a class="header-anchor" href="#serialize" aria-label="Permalink to &quot;serialize?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>serialize</strong>: <a href="./Serializer"><code>Serializer</code></a>&lt;<code>T</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/3914abe3b71638946c178175ac5cb09af4684d1b/src/types.ts#L16" target="_blank" rel="noreferrer">types.ts:16</a></p><hr><h3 id="equals" tabindex="-1">equals()? <a class="header-anchor" href="#equals" aria-label="Permalink to &quot;equals()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>equals</strong>: (<code>a</code>, <code>b</code>) =&gt; <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/3914abe3b71638946c178175ac5cb09af4684d1b/src/types.ts#L21" target="_blank" rel="noreferrer">types.ts:21</a></p><p>Custom equality to compare with <code>default</code> when deciding to omit from URL. Defaults to Object.is.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="a" tabindex="-1">a <a class="header-anchor" href="#a" aria-label="Permalink to &quot;a&quot;">​</a></h5><p><code>T</code></p><h5 id="b" tabindex="-1">b <a class="header-anchor" href="#b" aria-label="Permalink to &quot;b&quot;">​</a></h5><p><code>T</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><hr><h3 id="omitifdefault" tabindex="-1">omitIfDefault? <a class="header-anchor" href="#omitifdefault" aria-label="Permalink to &quot;omitIfDefault?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>omitIfDefault</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/3914abe3b71638946c178175ac5cb09af4684d1b/src/types.ts#L26" target="_blank" rel="noreferrer">types.ts:26</a></p><p>If true, will not write to URL when value equals default. Defaults to true.</p><hr><h3 id="batchkey" tabindex="-1">batchKey? <a class="header-anchor" href="#batchkey" aria-label="Permalink to &quot;batchKey?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>batchKey</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/3914abe3b71638946c178175ac5cb09af4684d1b/src/types.ts#L31" target="_blank" rel="noreferrer">types.ts:31</a></p><p>Optional key to conceptually group params when batching updates. Not used internally yet, but reserved for future heuristics or custom adapters.</p>',49)]))}const u=a(s,[["render",c]]);export{h as __pageData,u as default};
