import{_ as a,c as r,o as t,ae as o}from"./chunks/framework.CSF8Tn1V.js";const h=JSON.parse('{"title":"Type Alias: QueryAdapter","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/QueryAdapter.md","filePath":"api/type-aliases/QueryAdapter.md","lastUpdated":1754979734000}'),s={name:"api/type-aliases/QueryAdapter.md"};function d(c,e,n,i,u,l){return t(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../README"><strong>vue-qs v0.1.9</strong></a></p><hr><p><a href="./../README">vue-qs</a> / QueryAdapter</p><h1 id="type-alias-queryadapter" tabindex="-1">Type Alias: QueryAdapter <a class="header-anchor" href="#type-alias-queryadapter" aria-label="Permalink to &quot;Type Alias: QueryAdapter&quot;">​</a></h1><blockquote><p><strong>QueryAdapter</strong> = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/45dc30a366c9ea66c571cd99d51f1943495f1e56/src/types.ts#L86" target="_blank" rel="noreferrer">types.ts:86</a></p><p>Abstraction over how to read/write query string values.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="getquery" tabindex="-1">getQuery() <a class="header-anchor" href="#getquery" aria-label="Permalink to &quot;getQuery()&quot;">​</a></h3><blockquote><p><strong>getQuery</strong>(): <code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/45dc30a366c9ea66c571cd99d51f1943495f1e56/src/types.ts#L88" target="_blank" rel="noreferrer">types.ts:88</a></p><p>Read current query params as a plain object. Values are strings or undefined.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;</p><hr><h3 id="setquery" tabindex="-1">setQuery() <a class="header-anchor" href="#setquery" aria-label="Permalink to &quot;setQuery()&quot;">​</a></h3><blockquote><p><strong>setQuery</strong>(<code>next</code>, <code>options?</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/45dc30a366c9ea66c571cd99d51f1943495f1e56/src/types.ts#L90" target="_blank" rel="noreferrer">types.ts:90</a></p><p>Replace the query params, merging with existing by default.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="next" tabindex="-1">next <a class="header-anchor" href="#next" aria-label="Permalink to &quot;next&quot;">​</a></h5><p><code>Record</code>&lt;<code>string</code>, <code>string</code> | <code>undefined</code>&gt;</p><h5 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options?&quot;">​</a></h5><h6 id="history" tabindex="-1">history? <a class="header-anchor" href="#history" aria-label="Permalink to &quot;history?&quot;">​</a></h6><p><code>&quot;replace&quot;</code> | <code>&quot;push&quot;</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="subscribe" tabindex="-1">subscribe()? <a class="header-anchor" href="#subscribe" aria-label="Permalink to &quot;subscribe()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>subscribe</strong>(<code>cb</code>): () =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/45dc30a366c9ea66c571cd99d51f1943495f1e56/src/types.ts#L98" target="_blank" rel="noreferrer">types.ts:98</a></p><p>Optional: subscribe to external query changes (e.g., router nav, popstate). Returns an unsubscribe. Not required by all adapters; if absent, callers can fallback to window popstate.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="cb" tabindex="-1">cb <a class="header-anchor" href="#cb" aria-label="Permalink to &quot;cb&quot;">​</a></h5><p>() =&gt; <code>void</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><blockquote><p>(): <code>void</code></p></blockquote><h5 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p>',39)]))}const b=a(s,[["render",d]]);export{h as __pageData,b as default};
