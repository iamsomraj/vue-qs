import{_ as a,c as r,o as t,ae as o}from"./chunks/framework.CSF8Tn1V.js";const u=JSON.parse('{"title":"Type Alias: QueryCodec<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/QueryCodec.md","filePath":"api/type-aliases/QueryCodec.md","lastUpdated":1755092528000}'),s={name:"api/type-aliases/QueryCodec.md"};function i(p,e,c,l,d,n){return t(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../README"><strong>vue-qs v0.1.15</strong></a></p><hr><p><a href="./../README">vue-qs</a> / QueryCodec</p><h1 id="type-alias-querycodec-t" tabindex="-1">Type Alias: QueryCodec&lt;T&gt; <a class="header-anchor" href="#type-alias-querycodec-t" aria-label="Permalink to &quot;Type Alias: QueryCodec\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>QueryCodec</strong>&lt;<code>T</code>&gt; = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/c6723d94881f5a2550faa61b4e51be4507991c23/src/types.ts#L23" target="_blank" rel="noreferrer">types.ts:23</a></p><p>A codec that combines both parse and serialize functions for a given type</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><p>The type this codec handles</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="parse" tabindex="-1">parse <a class="header-anchor" href="#parse" aria-label="Permalink to &quot;parse&quot;">​</a></h3><blockquote><p><strong>parse</strong>: <a href="./QueryParser"><code>QueryParser</code></a>&lt;<code>T</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/c6723d94881f5a2550faa61b4e51be4507991c23/src/types.ts#L25" target="_blank" rel="noreferrer">types.ts:25</a></p><p>Function to parse string values from URL into typed values</p><hr><h3 id="serialize" tabindex="-1">serialize <a class="header-anchor" href="#serialize" aria-label="Permalink to &quot;serialize&quot;">​</a></h3><blockquote><p><strong>serialize</strong>: <a href="./QuerySerializer"><code>QuerySerializer</code></a>&lt;<code>T</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/c6723d94881f5a2550faa61b4e51be4507991c23/src/types.ts#L27" target="_blank" rel="noreferrer">types.ts:27</a></p><p>Function to serialize typed values back to URL strings</p>',21)]))}const b=a(s,[["render",i]]);export{u as __pageData,b as default};
