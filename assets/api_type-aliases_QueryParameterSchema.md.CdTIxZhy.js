import{_ as e,c as s,o as i,ae as t}from"./chunks/framework.CSF8Tn1V.js";const k=JSON.parse('{"title":"Type Alias: QueryParameterSchema","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/QueryParameterSchema.md","filePath":"api/type-aliases/QueryParameterSchema.md","lastUpdated":1755526574000}'),r={name:"api/type-aliases/QueryParameterSchema.md"};function n(p,a,l,h,c,o){return i(),s("div",null,a[0]||(a[0]=[t(`<p><a href="./../README"><strong>vue-qs v0.1.18</strong></a></p><hr><p><a href="./../README">vue-qs</a> / QueryParameterSchema</p><h1 id="type-alias-queryparameterschema" tabindex="-1">Type Alias: QueryParameterSchema <a class="header-anchor" href="#type-alias-queryparameterschema" aria-label="Permalink to &quot;Type Alias: QueryParameterSchema&quot;">​</a></h1><blockquote><p><strong>QueryParameterSchema</strong> = <code>Record</code>&lt;<code>string</code>, <a href="./QueryParameterOptions"><code>QueryParameterOptions</code></a>&lt;<code>any</code>&gt;&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/types.ts#L90" target="_blank" rel="noreferrer">types.ts:90</a></p><p>Schema defining multiple query parameters with their configurations</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> schema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> QueryParameterSchema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  search: { defaultValue: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  page: { defaultValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, codec: numberCodec },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  filters: { defaultValue: {}, codec: jsonCodec }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,9)]))}const m=e(r,[["render",n]]);export{k as __pageData,m as default};
