import{_ as a,c as t,o as s,ae as i}from"./chunks/framework.CSF8Tn1V.js";const u=JSON.parse('{"title":"Type Alias: QueryReactiveOptions","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/QueryReactiveOptions.md","filePath":"api/type-aliases/QueryReactiveOptions.md","lastUpdated":1755526574000}'),r={name:"api/type-aliases/QueryReactiveOptions.md"};function o(p,e,n,l,h,c){return s(),t("div",null,e[0]||(e[0]=[i(`<p><a href="./../README"><strong>vue-qs v0.1.18</strong></a></p><hr><p><a href="./../README">vue-qs</a> / QueryReactiveOptions</p><h1 id="type-alias-queryreactiveoptions" tabindex="-1">Type Alias: QueryReactiveOptions <a class="header-anchor" href="#type-alias-queryreactiveoptions" aria-label="Permalink to &quot;Type Alias: QueryReactiveOptions&quot;">​</a></h1><blockquote><p><strong>QueryReactiveOptions</strong> = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/types.ts#L152" target="_blank" rel="noreferrer">types.ts:152</a></p><p>Options for queryReactive composable</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> QueryReactiveOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  historyStrategy: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;replace&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  queryAdapter: customAdapter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="historystrategy" tabindex="-1">historyStrategy? <a class="header-anchor" href="#historystrategy" aria-label="Permalink to &quot;historyStrategy?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>historyStrategy</strong>: <code>&quot;replace&quot;</code> | <code>&quot;push&quot;</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/types.ts#L154" target="_blank" rel="noreferrer">types.ts:154</a></p><p>History strategy when updating the URL</p><hr><h3 id="queryadapter" tabindex="-1">queryAdapter? <a class="header-anchor" href="#queryadapter" aria-label="Permalink to &quot;queryAdapter?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>queryAdapter</strong>: <a href="./QueryAdapter"><code>QueryAdapter</code></a></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/types.ts#L156" target="_blank" rel="noreferrer">types.ts:156</a></p><p>Optional custom query adapter to use</p>`,19)]))}const y=a(r,[["render",o]]);export{u as __pageData,y as default};
