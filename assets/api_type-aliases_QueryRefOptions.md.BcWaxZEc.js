import{_ as a,c as s,o as t,ae as i}from"./chunks/framework.CSF8Tn1V.js";const y=JSON.parse('{"title":"Type Alias: QueryRefOptions<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/QueryRefOptions.md","filePath":"api/type-aliases/QueryRefOptions.md","lastUpdated":1755526574000}'),r={name:"api/type-aliases/QueryRefOptions.md"};function p(o,e,n,l,h,d){return t(),s("div",null,e[0]||(e[0]=[i(`<p><a href="./../README"><strong>vue-qs v0.1.18</strong></a></p><hr><p><a href="./../README">vue-qs</a> / QueryRefOptions</p><h1 id="type-alias-queryrefoptions-t" tabindex="-1">Type Alias: QueryRefOptions&lt;T&gt; <a class="header-anchor" href="#type-alias-queryrefoptions-t" aria-label="Permalink to &quot;Type Alias: QueryRefOptions\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>QueryRefOptions</strong>&lt;<code>T</code>&gt; = <a href="./QueryParameterOptions"><code>QueryParameterOptions</code></a>&lt;<code>T</code>&gt; &amp; <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/types.ts#L105" target="_blank" rel="noreferrer">types.ts:105</a></p><p>Options for queryRef composable</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="historystrategy" tabindex="-1">historyStrategy? <a class="header-anchor" href="#historystrategy" aria-label="Permalink to &quot;historyStrategy?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>historyStrategy</strong>: <code>&quot;replace&quot;</code> | <code>&quot;push&quot;</code></p></blockquote><p>History strategy when updating the URL (&#39;replace&#39; | &#39;push&#39;)</p><h3 id="queryadapter" tabindex="-1">queryAdapter? <a class="header-anchor" href="#queryadapter" aria-label="Permalink to &quot;queryAdapter?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>queryAdapter</strong>: <a href="./QueryAdapter"><code>QueryAdapter</code></a></p></blockquote><p>Optional custom query adapter to use</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><p>The type of the query parameter value</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> QueryRefOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  defaultValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  codec: numberCodec,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  historyStrategy: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;replace&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  shouldOmitDefault: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,20)]))}const k=a(r,[["render",p]]);export{y as __pageData,k as default};
