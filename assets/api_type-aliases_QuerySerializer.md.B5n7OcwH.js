import{_ as a,c as r,o as t,ae as i}from"./chunks/framework.CSF8Tn1V.js";const h=JSON.parse('{"title":"Type Alias: QuerySerializer()<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/QuerySerializer.md","filePath":"api/type-aliases/QuerySerializer.md","lastUpdated":null}'),l={name:"api/type-aliases/QuerySerializer.md"};function s(o,e,p,d,n,u){return t(),r("div",null,e[0]||(e[0]=[i('<p><a href="./../README"><strong>vue-qs v0.1.14</strong></a></p><hr><p><a href="./../README">vue-qs</a> / QuerySerializer</p><h1 id="type-alias-queryserializer-t" tabindex="-1">Type Alias: QuerySerializer()&lt;T&gt; <a class="header-anchor" href="#type-alias-queryserializer-t" aria-label="Permalink to &quot;Type Alias: QuerySerializer()\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>QuerySerializer</strong>&lt;<code>T</code>&gt; = (<code>typedValue</code>) =&gt; <code>string</code> | <code>null</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/ec4fb3c838b3c4df192df135415be97046b0cf75/src/types.ts#L17" target="_blank" rel="noreferrer">types.ts:17</a></p><p>Function that serializes a typed value into a string for the URL query</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p><p>The input type to serialize</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="typedvalue" tabindex="-1">typedValue <a class="header-anchor" href="#typedvalue" aria-label="Permalink to &quot;typedValue&quot;">​</a></h3><p><code>T</code></p><p>The typed value to serialize</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code> | <code>null</code></p><p>The serialized string value or null if the value should be omitted</p>',18)]))}const y=a(l,[["render",s]]);export{h as __pageData,y as default};
