import{_ as a,c as i,o as s,ae as t}from"./chunks/framework.CSF8Tn1V.js";const b=JSON.parse('{"title":"Type Alias: RuntimeEnvironment","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/RuntimeEnvironment.md","filePath":"api/type-aliases/RuntimeEnvironment.md","lastUpdated":1755526574000}'),n={name:"api/type-aliases/RuntimeEnvironment.md"};function r(o,e,p,l,h,d){return s(),i("div",null,e[0]||(e[0]=[t(`<p><a href="./../README"><strong>vue-qs v0.1.18</strong></a></p><hr><p><a href="./../README">vue-qs</a> / RuntimeEnvironment</p><h1 id="type-alias-runtimeenvironment" tabindex="-1">Type Alias: RuntimeEnvironment <a class="header-anchor" href="#type-alias-runtimeenvironment" aria-label="Permalink to &quot;Type Alias: RuntimeEnvironment&quot;">​</a></h1><blockquote><p><strong>RuntimeEnvironment</strong> = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/types.ts#L196" target="_blank" rel="noreferrer">types.ts:196</a></p><p>Runtime environment information Used to determine if we&#39;re running in a browser or server environment</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RuntimeEnvironment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isBrowser: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  windowObject: window</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="isbrowser" tabindex="-1">isBrowser <a class="header-anchor" href="#isbrowser" aria-label="Permalink to &quot;isBrowser&quot;">​</a></h3><blockquote><p><strong>isBrowser</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/types.ts#L198" target="_blank" rel="noreferrer">types.ts:198</a></p><p>Whether we&#39;re running in a browser environment</p><hr><h3 id="windowobject" tabindex="-1">windowObject <a class="header-anchor" href="#windowobject" aria-label="Permalink to &quot;windowObject&quot;">​</a></h3><blockquote><p><strong>windowObject</strong>: <code>Window</code> | <code>null</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/types.ts#L200" target="_blank" rel="noreferrer">types.ts:200</a></p><p>Window object if available</p>`,19)]))}const m=a(n,[["render",r]]);export{b as __pageData,m as default};
