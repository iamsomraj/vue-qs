import{_ as t,c as a,o as r,ae as o}from"./chunks/framework.CSF8Tn1V.js";const d=JSON.parse('{"title":"Type Alias: UseQueryReactiveOptions","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/UseQueryReactiveOptions.md","filePath":"api/type-aliases/UseQueryReactiveOptions.md","lastUpdated":1755081532000}'),s={name:"api/type-aliases/UseQueryReactiveOptions.md"};function i(p,e,n,c,l,u){return r(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../README"><strong>vue-qs v0.1.12</strong></a></p><hr><p><a href="./../README">vue-qs</a> / UseQueryReactiveOptions</p><h1 id="type-alias-usequeryreactiveoptions" tabindex="-1">Type Alias: UseQueryReactiveOptions <a class="header-anchor" href="#type-alias-usequeryreactiveoptions" aria-label="Permalink to &quot;Type Alias: UseQueryReactiveOptions&quot;">​</a></h1><blockquote><p><strong>UseQueryReactiveOptions</strong> = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/25821b36b15a9ec7f33138992536e546f5649808/src/types.ts#L113" target="_blank" rel="noreferrer">types.ts:113</a></p><p>Options for useQueryReactive composable</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="historystrategy" tabindex="-1">historyStrategy? <a class="header-anchor" href="#historystrategy" aria-label="Permalink to &quot;historyStrategy?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>historyStrategy</strong>: <code>&quot;replace&quot;</code> | <code>&quot;push&quot;</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/25821b36b15a9ec7f33138992536e546f5649808/src/types.ts#L115" target="_blank" rel="noreferrer">types.ts:115</a></p><p>History strategy when updating the URL</p><hr><h3 id="queryadapter" tabindex="-1">queryAdapter? <a class="header-anchor" href="#queryadapter" aria-label="Permalink to &quot;queryAdapter?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>queryAdapter</strong>: <a href="./QueryAdapter"><code>QueryAdapter</code></a></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/25821b36b15a9ec7f33138992536e546f5649808/src/types.ts#L117" target="_blank" rel="noreferrer">types.ts:117</a></p><p>Optional custom query adapter to use</p><hr><h3 id="enabletwowaysync" tabindex="-1">enableTwoWaySync? <a class="header-anchor" href="#enabletwowaysync" aria-label="Permalink to &quot;enableTwoWaySync?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>enableTwoWaySync</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/25821b36b15a9ec7f33138992536e546f5649808/src/types.ts#L119" target="_blank" rel="noreferrer">types.ts:119</a></p><p>Enable two-way synchronization with URL changes</p>',22)]))}const h=t(s,[["render",i]]);export{d as __pageData,h as default};
