import{_ as t,c as a,o,ae as r}from"./chunks/framework.CSF8Tn1V.js";const h=JSON.parse('{"title":"Type Alias: UseQueryReactiveOptions","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/UseQueryReactiveOptions.md","filePath":"api/type-aliases/UseQueryReactiveOptions.md","lastUpdated":1754937236000}'),s={name:"api/type-aliases/UseQueryReactiveOptions.md"};function i(p,e,c,n,l,d){return o(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../README"><strong>vue-qs v0.1.7</strong></a></p><hr><p><a href="./../README">vue-qs</a> / UseQueryReactiveOptions</p><h1 id="type-alias-usequeryreactiveoptions" tabindex="-1">Type Alias: UseQueryReactiveOptions <a class="header-anchor" href="#type-alias-usequeryreactiveoptions" aria-label="Permalink to &quot;Type Alias: UseQueryReactiveOptions&quot;">​</a></h1><blockquote><p><strong>UseQueryReactiveOptions</strong> = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/b9909ff029be0e52ce297bc89945187d8e2b539f/src/types.ts#L74" target="_blank" rel="noreferrer">types.ts:74</a></p><p>Options for <a href="./../functions/useQueryReactive">useQueryReactive</a>.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="history" tabindex="-1">history? <a class="header-anchor" href="#history" aria-label="Permalink to &quot;history?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>history</strong>: <code>&quot;replace&quot;</code> | <code>&quot;push&quot;</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/b9909ff029be0e52ce297bc89945187d8e2b539f/src/types.ts#L75" target="_blank" rel="noreferrer">types.ts:75</a></p><hr><h3 id="adapter" tabindex="-1">adapter? <a class="header-anchor" href="#adapter" aria-label="Permalink to &quot;adapter?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>adapter</strong>: <a href="./QueryAdapter"><code>QueryAdapter</code></a></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/b9909ff029be0e52ce297bc89945187d8e2b539f/src/types.ts#L76" target="_blank" rel="noreferrer">types.ts:76</a></p><hr><h3 id="twoway" tabindex="-1">twoWay? <a class="header-anchor" href="#twoway" aria-label="Permalink to &quot;twoWay?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>twoWay</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/b9909ff029be0e52ce297bc89945187d8e2b539f/src/types.ts#L81" target="_blank" rel="noreferrer">types.ts:81</a></p><p>If true, also listen to browser/router navigations and rehydrate the state from the URL. Defaults to false</p>',20)]))}const b=t(s,[["render",i]]);export{h as __pageData,b as default};
