import{_ as a,c as t,o as r,ae as o}from"./chunks/framework.CSF8Tn1V.js";const u=JSON.parse('{"title":"Type Alias: UseQueryReactiveReturn<TSchema>","description":"","frontmatter":{},"headers":[],"relativePath":"api/type-aliases/UseQueryReactiveReturn.md","filePath":"api/type-aliases/UseQueryReactiveReturn.md","lastUpdated":1754979734000}'),s={name:"api/type-aliases/UseQueryReactiveReturn.md"};function c(i,e,n,h,d,l){return r(),t("div",null,e[0]||(e[0]=[o('<p><a href="./../README"><strong>vue-qs v0.1.9</strong></a></p><hr><p><a href="./../README">vue-qs</a> / UseQueryReactiveReturn</p><h1 id="type-alias-usequeryreactivereturn-tschema" tabindex="-1">Type Alias: UseQueryReactiveReturn&lt;TSchema&gt; <a class="header-anchor" href="#type-alias-usequeryreactivereturn-tschema" aria-label="Permalink to &quot;Type Alias: UseQueryReactiveReturn\\&lt;TSchema\\&gt;&quot;">​</a></h1><blockquote><p><strong>UseQueryReactiveReturn</strong>&lt;<code>TSchema</code>&gt; = <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/45dc30a366c9ea66c571cd99d51f1943495f1e56/src/types.ts#L60" target="_blank" rel="noreferrer">types.ts:60</a></p><p>The return type from <a href="./../functions/useQueryReactive">useQueryReactive</a>.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="tschema" tabindex="-1">TSchema <a class="header-anchor" href="#tschema" aria-label="Permalink to &quot;TSchema&quot;">​</a></h3><p><code>TSchema</code> <em>extends</em> <a href="./ParamSchema"><code>ParamSchema</code></a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-label="Permalink to &quot;state&quot;">​</a></h3><blockquote><p><strong>state</strong>: <code>{ [K in keyof TSchema]: TSchema[K] extends ParamOption&lt;infer T&gt; ? T : never }</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/45dc30a366c9ea66c571cd99d51f1943495f1e56/src/types.ts#L62" target="_blank" rel="noreferrer">types.ts:62</a></p><p>Reactive object with typed values for each parameter in the schema.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="batch" tabindex="-1">batch() <a class="header-anchor" href="#batch" aria-label="Permalink to &quot;batch()&quot;">​</a></h3><blockquote><p><strong>batch</strong>(<code>update</code>, <code>options?</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/45dc30a366c9ea66c571cd99d51f1943495f1e56/src/types.ts#L66" target="_blank" rel="noreferrer">types.ts:66</a></p><p>Batch update multiple params in a single history entry.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="update" tabindex="-1">update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update&quot;">​</a></h5><p><code>Partial</code>&lt;<code>{ [K in keyof TSchema]: TSchema[K] extends ParamOption&lt;infer T&gt; ? T : never }</code>&gt;</p><h5 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options?&quot;">​</a></h5><h6 id="history" tabindex="-1">history? <a class="header-anchor" href="#history" aria-label="Permalink to &quot;history?&quot;">​</a></h6><p><code>&quot;replace&quot;</code> | <code>&quot;push&quot;</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="sync" tabindex="-1">sync() <a class="header-anchor" href="#sync" aria-label="Permalink to &quot;sync()&quot;">​</a></h3><blockquote><p><strong>sync</strong>(): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/45dc30a366c9ea66c571cd99d51f1943495f1e56/src/types.ts#L71" target="_blank" rel="noreferrer">types.ts:71</a></p><p>Immediately write the current state to the URL</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',35)]))}const m=a(s,[["render",c]]);export{u as __pageData,m as default};
