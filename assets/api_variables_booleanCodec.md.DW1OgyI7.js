import{_ as e,c as s,o as i,ae as t}from"./chunks/framework.CSF8Tn1V.js";const k=JSON.parse('{"title":"Variable: booleanCodec","description":"","frontmatter":{},"headers":[],"relativePath":"api/variables/booleanCodec.md","filePath":"api/variables/booleanCodec.md","lastUpdated":1755526574000}'),l={name:"api/variables/booleanCodec.md"};function o(n,a,r,p,d,c){return i(),s("div",null,a[0]||(a[0]=[t(`<p><a href="./../README"><strong>vue-qs v0.1.18</strong></a></p><hr><p><a href="./../README">vue-qs</a> / booleanCodec</p><h1 id="variable-booleancodec" tabindex="-1">Variable: booleanCodec <a class="header-anchor" href="#variable-booleancodec" aria-label="Permalink to &quot;Variable: booleanCodec&quot;">​</a></h1><blockquote><p><code>const</code> <strong>booleanCodec</strong>: <a href="./../type-aliases/QueryCodec"><code>QueryCodec</code></a>&lt;<code>boolean</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/iamsomraj/vue-qs/blob/bdb41c8152865a4fb600c24be642289b5d115cbf/src/serializers.ts#L81" target="_blank" rel="noreferrer">serializers.ts:81</a></p><p>Boolean codec for handling boolean values Treats &#39;true&#39; and &#39;1&#39; as true, everything else as false</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isActive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> queryRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;active&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  defaultValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  codec: booleanCodec</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,9)]))}const b=e(l,[["render",o]]);export{k as __pageData,b as default};
