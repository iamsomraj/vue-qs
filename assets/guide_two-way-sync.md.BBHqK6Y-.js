import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.CSF8Tn1V.js";const c=JSON.parse('{"title":"Two‑Way Sync","description":"","frontmatter":{},"headers":[],"relativePath":"guide/two-way-sync.md","filePath":"guide/two-way-sync.md","lastUpdated":1755080373000}'),n={name:"guide/two-way-sync.md"};function p(l,s,h,k,r,d){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="two‐way-sync" tabindex="-1">Two‑Way Sync <a class="header-anchor" href="#two‐way-sync" aria-label="Permalink to &quot;Two‑Way Sync&quot;">​</a></h1><p>Add <code>enableTwoWaySync: true</code> so state also updates when the URL changes (browser back/forward, router navigation).</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useQueryRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;page&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  defaultValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  codec: serializers.numberCodec,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  enableTwoWaySync: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>Reactive group:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">queryState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useQueryReactive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(schema, { enableTwoWaySync: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><p>How it works:</p><ul><li>History API adapter listens to <code>popstate</code>.</li><li>Router adapter listens to <code>router.afterEach</code>.</li></ul><p>When a navigation happens we re-parse affected params and update your ref / state object.</p>`,8)]))}const y=a(n,[["render",p]]);export{c as __pageData,y as default};
